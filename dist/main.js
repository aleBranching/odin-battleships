(()=>{"use strict";function e(e){let r=0;const t=e;return{isSunk:()=>r>=t,hit:()=>{r+=1},_length:t,placed:!1,coordinates:void 0}}function r(){const r=[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],t=[null,e(4),e(3),e(3),e(2),e(2),e(2),e(1),e(1),e(1),e(1)],o=[],c=e=>{let r=0;return(t=>{for(let t=0;t<o.length;t++)o[t]===e&&r++})(),r<{1:4,2:3,3:2,4:1}[e]},l=[];return{placeShip:(e,l,n,p)=>{if(l<0||n<0||l>10||n>10)throw new Error((e=>{console.error("can't place ship here or no more of these ships or ship too big")}));if(!c)throw new Error((e=>{console.error("can't put anymore of these ships")}));let i;if((()=>{const t=(()=>{const r=[];if(p){if(p){let t=l;for(let o=0;o<e;o++)if(r.push([t,n]),t++,t>10)throw new Error("Boat out of game!")}}else{let t=n;for(let o=0;o<e;o++)if(r.push([l,t]),t++,t>10)throw new Error("boat out of game!")}return r})();return!!(()=>{let e=!0;return t.forEach((t=>{const o=t[0],c=t[1];0!==r[c][o]&&(e=!1)})),e})()&&(i=[...t],!0)})()&&c(e)){const c=(e=>{let r;for(let o=0;o<=10;o++)if(null!=t[o]&&t[o]._length===e&&!1===t[o].placed){r=o;break}return r})(e);t[c].placed=!0,o.push(e),t[c].coordinates=i,i.forEach((e=>{const t=e[0],o=e[1];r[o][t]=c}))}},gameArena:r,receiveAttack:(e,o)=>{if(0!==r[o][e]){const c=r[o][e];t[c].hit()}else l.push([e,o])},allShipsSunk:()=>{let e=0;for(let r=1;r<11;r++)t[r].isSunk()&&e++;return e>=10},missedShots:l,currentShipsOBJ:t}}const t=function(){const e=(e,r,t)=>document.querySelector(`.${e} .row[data-x="${r}"] .box[data-y="${t}"]`);return{renderExistingBoats:(r,t)=>{const o=([r,o])=>{e(t,r,o).style.backgroundColor="grey"};r.currentShipsOBJ.forEach((e=>{null==e||e.coordinates.forEach(o)}))},getBoxDOM:e}}();console.log("test"),console.log("change"),(()=>{const e=r();var o,c;c=r(),(o=e).placeShip(4,0,0,!0),o.placeShip(3,6,0,!0),o.placeShip(3,0,1,!0),o.placeShip(2,0,3,!0),o.placeShip(2,0,5,!0),o.placeShip(2,9,6,!1),o.placeShip(1,2,7,!0),o.placeShip(1,3,8,!0),o.placeShip(1,4,9,!0),o.placeShip(1,7,9,!0),c.placeShip(4,0,0,!0),c.placeShip(3,6,0,!0),c.placeShip(3,0,1,!0),c.placeShip(2,0,3,!0),c.placeShip(2,0,5,!0),c.placeShip(2,9,6,!1),c.placeShip(1,2,7,!0),c.placeShip(1,3,8,!0),c.placeShip(1,4,9,!0),c.placeShip(1,7,9,!0),t.renderExistingBoats(e,"playerArea")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,